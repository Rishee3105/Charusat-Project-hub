// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Register
// Input:
// firstName , lastName , email , password , Role , only college id will be accepted , Department , Institute 
// Email Id Format : 22ce069@charusat.edu.in , For Faculty : ronalrpatel.ce@charusat.ac.in

// Signin
// email id (Charusat) , password

// User Profile
// Domain , skills , About Me , Experience (Internship) , Achievements , Projects , Social Links , Projects Links , Certificates , Curr CGPA , Contact Info , Profile Photo 
model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  firstName    String
  lastName     String
  password     String
  role         UserRole
  charusatId   String   @unique
  institute    String
  department   String
  domain       String? // Domain of expertise
  aboutMe      String? // Brief introduction
  currCgpa     Float? // Current CGPA
  phoneNumber  String? // Contact number
  profilePhoto String? // URL to profile photo

  // Relationships for complex data
  skills       UserSkill[] // Skills linked to the user
  experiences  Experience[] // Experiences linked to the user
  projects     Project[] // Projects linked to the user
  certificates Certificate[] // Certificates linked to the user

  // Embedded data for simple lists
  achievements String[] // Array of achievements
  socialLinks  String[] // Array of social media links

  @@index([firstName, lastName]) // Index for name-based searches
  @@index([email, domain, role]) // Index for frequently filtered fields
  @@map("users")
}

model UserSkill {
  id     Int    @id @default(autoincrement())
  userId Int
  skill  String // Skill name

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, skill]) // Prevent duplicate skills for the same user
}

model Experience {
  id       Int    @id @default(autoincrement())
  userId   Int
  title    String
  company  String
  duration String // E.g., "3 months", "1 year"

  user User @relation(fields: [userId], references: [id])
}

model Project {
  id      Int     @id @default(autoincrement())
  userId  Int
  title   String
  link    String? // Optional URL to the project
  details String? // Optional description

  user User @relation(fields: [userId], references: [id])
}

model Certificate {
  id     Int     @id @default(autoincrement())
  userId Int
  title  String
  url    String? // Optional URL to the certificate

  user User @relation(fields: [userId], references: [id])
}

enum UserRole {
  STUDENT
  TEACHER
}
